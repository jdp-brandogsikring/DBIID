@using DBI.DIGI.Components.Toast
@using DBIID.Shared.Features.Users
@inject IApiRequestService ApiRequestService
@inject IToastService ToastService

<h3>Opret bruger</h3>

<DBI.DIGI.Components.Inputs.LabeledTextInput Label="Fornavn" @bind-Input="user.GivenName"></DBI.DIGI.Components.Inputs.LabeledTextInput>
<DBI.DIGI.Components.Inputs.LabeledTextInput Label="Efternavn" @bind-Input="user.FamilyName"></DBI.DIGI.Components.Inputs.LabeledTextInput>
<DBI.DIGI.Components.Inputs.LabeledTextInput Label="E-mail" @bind-Input="user.Email"></DBI.DIGI.Components.Inputs.LabeledTextInput>
<DBI.DIGI.Components.Inputs.LabeledTextInput Label="Telefon" @bind-Input="user.Phone"></DBI.DIGI.Components.Inputs.LabeledTextInput>

<DBI.DIGI.Components.Button Class="DBI.DIGI.Components.ButtonType.Prim" OnClick="OnCreateUser" Title="Opret bruger"></DBI.DIGI.Components.Button>

@if (!string.IsNullOrEmpty(validationMessage))
{
    <p style="color:red">@validationMessage</p>
}

@code {
    [Parameter]
    public required EventCallback<UserDto> OnClose { get; set; }

    private CreateUserCommand user = new();
    private string validationMessage;

    private async Task OnCreateUser()
    {
        validationMessage = string.Empty;

        var response = await ApiRequestService.SendAsync(user);

        if (!response.IsSuccess)
        {
            validationMessage = response.Message; // ✅ Vis fejlbesked i UI
            ToastService.Open(new ToastWithAutoClose()
                {
                    Duration = TimeSpan.FromSeconds(5),
                    Status = ToastStatus.Error,
                    Title = "Der skete en fejl"
                });
        }
        else
        {
            ToastService.Open(new ToastWithAutoClose()
                {
                    Duration = TimeSpan.FromSeconds(5),
                    Status = ToastStatus.Success,
                    Title = "Brugeren er oprettet"
                });
            this.OnClose.InvokeAsync(response.Value);
        }
    }
}
