@page "/"
@using Newtonsoft.Json
@inject NavigationManager NavigationManager


<PageTitle>Home</PageTitle>

@if (dto is not null)
{
    <h1>Velkommen @dto.UserName</h1>
}
else
{
    <button class="btn btn-primary" @onclick="OnLoginClick">Login</button>
}



@code {

    ApplicationLoginDto? dto { get; set; }

    private void OnLoginClick()
    {
        // Implement your login logic here
        // For example, redirect to a login page or initiate an SSO process
        NavigationManager.NavigateTo("https://localhost:7128/login/application?App=b1ad486fd4b04063ba35e45a47fd70c8");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Console.WriteLine(GetQueryParm("SSO"));

            HttpClient client = new HttpClient();
            client.BaseAddress = new Uri("https://localhost:7128/api/system/");
            var ssoToken = GetQueryParm("SSO");
            if (!string.IsNullOrWhiteSpace(ssoToken))
            {
                try
                {
                    var response = await client.GetAsync(ssoToken);
                    if (response.IsSuccessStatusCode)
                    {
                        var content = await response.Content.ReadAsStringAsync();
                        dto = JsonConvert.DeserializeObject<ApplicationLoginDto>(content);

                        StateHasChanged();

                        Console.WriteLine("SSO Token is valid: " + content);
                    }
                    else
                    {
                        Console.WriteLine("SSO Token is invalid or expired.");
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine("Error validating SSO Token: " + ex.Message);
                }
            }
            else
            {
                Console.WriteLine("No SSO Token provided in the query parameters.");
            }
        }

    }

    string GetQueryParm(string parmName)
    {
        var uriBuilder = new UriBuilder(NavigationManager.Uri);
        var q = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);
        return q[parmName] ?? "";
    }

}